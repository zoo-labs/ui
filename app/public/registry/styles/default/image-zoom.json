{
  "name": "image-zoom",
  "description": "Image zoom on click/hover",
  "dependencies": [
    "react-medium-image-zoom"
  ],
  "files": [
    {
      "name": "image-zoom.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ZoomIn } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface ImageZoomProps\n  extends React.ImgHTMLAttributes<HTMLImageElement> {\n  zoomScale?: number\n}\n\nconst ImageZoom = React.forwardRef<HTMLDivElement, ImageZoomProps>(\n  ({ className, src, alt, zoomScale = 2, ...props }, ref) => {\n    const [isZoomed, setIsZoomed] = React.useState(false)\n    const [position, setPosition] = React.useState({ x: 0, y: 0 })\n\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!isZoomed) return\n      const rect = e.currentTarget.getBoundingClientRect()\n      const x = ((e.clientX - rect.left) / rect.width) * 100\n      const y = ((e.clientY - rect.top) / rect.height) * 100\n      setPosition({ x, y })\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"group relative cursor-zoom-in overflow-hidden rounded-lg\",\n          className\n        )}\n        onMouseEnter={() => setIsZoomed(true)}\n        onMouseLeave={() => setIsZoomed(false)}\n        onMouseMove={handleMouseMove}\n      >\n        <img\n          src={src}\n          alt={alt}\n          className={cn(\n            \"h-full w-full object-cover transition-transform duration-200\",\n            isZoomed && `scale-${zoomScale * 100}`\n          )}\n          style={\n            isZoomed\n              ? {\n                  transform: `scale(${zoomScale})`,\n                  transformOrigin: `${position.x}% ${position.y}%`,\n                }\n              : undefined\n          }\n          {...props}\n        />\n        <div className=\"absolute right-2 top-2 rounded-full bg-black/50 p-1.5 opacity-0 transition-opacity group-hover:opacity-100\">\n          <ZoomIn className=\"h-4 w-4 text-white\" />\n        </div>\n      </div>\n    )\n  }\n)\nImageZoom.displayName = \"ImageZoom\"\n\nexport { ImageZoom }\n"
    }
  ],
  "type": "components:ui"
}